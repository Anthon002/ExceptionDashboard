@model IEnumerable<ExceptionDashboard.Core.Models.DTOs.ApplicationDTO>
@using Microsoft.AspNetCore.Identity;
@using ExceptionDashboard.Core.Models.Enums;
@inject UserManager<ApplicationUser> _userManager;
@inject ApplicationDbContext _context;
@{
    ViewBag.Context = _context;
}
@{
    var UserId = ViewData["UserId"].ToString();
    /*
     * This if statement checks if the current user is an Admin or a User
     * if user is an Admin, the user has access to view and select all applications
     * if user is a User, the user has access to view and select only his assigned applications
     */
    if (User.IsInRole("Admin")){
        <div class="customAppContainer">
            @foreach (var item in Model)
            {
                <a asp-controller="ExceptionView" asp-action="ViewSpecificExceptions" asp-route-Id="@item.Id" class="customAppCol">
                    <div class="item"> @item.Name  </div>
                </a>
            }
        </div>
    }
    else
    {
        <div class="customAppContainer">
            @foreach (var item in Model)
            {
                if (item.UserId == UserId)
                {
                    <a asp-controller="ExceptionView" asp-action="ViewSpecificExceptions" asp-route-Id="@item.Id" class="customAppCol">
                        <div class="item"> @item.Name  </div>
                    </a>
                }
            }
        </div>
    }
}

<table class="table text-sm mb-0 table-striped table-hover">
    <thead>
        <tr>
            <th>Number of Applications</th>
            <th>Number of UnHandled Exceptions</th>
            <th>Number of Handled Exceptions</th>
            <th>Number Of Users</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@_context.ApplicationDb.ToList().Count()</td>
            <td>@_context.ExceptionDb.ToList().Where(x => x.Status != ExceptionStatus.Completed).Count()</td>
            <td>@_context.ExceptionDb.ToList().Where(x => x.Status == ExceptionStatus.Completed).Count()</td>
            <td>@_userManager.Users.ToList().Count()</td>
        </tr>
    </tbody>
</table>
